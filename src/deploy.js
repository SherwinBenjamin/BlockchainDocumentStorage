var {Web3} = require('web3');
var web3 = new Web3(new Web3.providers.HttpProvider('http://13.232.187.19:8545')); // replace with your EC2 IP and port

var contractABI = [
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "bytes32",
				"name": "rawHash",
				"type": "bytes32"
			},
			{
				"indexed": false,
				"internalType": "string",
				"name": "cid",
				"type": "string"
			}
		],
		"name": "DocumentAdded",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "bytes32",
				"name": "rawHash",
				"type": "bytes32"
			},
			{
				"internalType": "string",
				"name": "cid",
				"type": "string"
			}
		],
		"name": "addDocument",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "bytes32",
				"name": "rawHash",
				"type": "bytes32"
			}
		],
		"name": "verifyDocument",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "bytes32",
				"name": "rawHash",
				"type": "bytes32"
			},
			{
				"internalType": "string",
				"name": "cid",
				"type": "string"
			}
		],
		"name": "verifyHashAndCID",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
];
var contractBytecode = '0x608060405234801561001057600080fd5b506109d5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063d602280d14610046578063ed8b840c14610062578063fe35089f14610092575b600080fd5b610060600480360381019061005b91906104c5565b6100c2565b005b61007c600480360381019061007791906104c5565b61014f565b604051610089919061053c565b60405180910390f35b6100ac60048036038101906100a79190610557565b610269565b6040516100b99190610603565b60405180910390f35b600060405180604001604052808481526020018381525090508060008085815260200190815260200160002060008201518160000155602082015181600101908161010d919061083b565b509050507f640aef29e99d3682bbe380b03b22038c2ea6acc3434e53f9166b9e0d35260944838360405161014292919061091c565b60405180910390a1505050565b6000806000808581526020019081526020016000206040518060400160405290816000820154815260200160018201805461018990610654565b80601f01602080910402602001604051908101604052809291908181526020018280546101b590610654565b80156102025780601f106101d757610100808354040283529160200191610202565b820191906000526020600020905b8154815290600101906020018083116101e557829003601f168201915b50505050508152505090508260405160200161021e9190610988565b6040516020818303038152906040528051906020012081602001516040516020016102499190610988565b604051602081830303815290604052805190602001201491505092915050565b60606000806000848152602001908152602001600020604051806040016040529081600082015481526020016001820180546102a490610654565b80601f01602080910402602001604051908101604052809291908181526020018280546102d090610654565b801561031d5780601f106102f25761010080835404028352916020019161031d565b820191906000526020600020905b81548152906001019060200180831161030057829003601f168201915b50505050508152505090508060200151915050919050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61035c81610349565b811461036757600080fd5b50565b60008135905061037981610353565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103d282610389565b810181811067ffffffffffffffff821117156103f1576103f061039a565b5b80604052505050565b6000610404610335565b905061041082826103c9565b919050565b600067ffffffffffffffff8211156104305761042f61039a565b5b61043982610389565b9050602081019050919050565b82818337600083830152505050565b600061046861046384610415565b6103fa565b90508281526020810184848401111561048457610483610384565b5b61048f848285610446565b509392505050565b600082601f8301126104ac576104ab61037f565b5b81356104bc848260208601610455565b91505092915050565b600080604083850312156104dc576104db61033f565b5b60006104ea8582860161036a565b925050602083013567ffffffffffffffff81111561050b5761050a610344565b5b61051785828601610497565b9150509250929050565b60008115159050919050565b61053681610521565b82525050565b6000602082019050610551600083018461052d565b92915050565b60006020828403121561056d5761056c61033f565b5b600061057b8482850161036a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156105be5780820151818401526020810190506105a3565b60008484015250505050565b60006105d582610584565b6105df818561058f565b93506105ef8185602086016105a0565b6105f881610389565b840191505092915050565b6000602082019050818103600083015261061d81846105ca565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061066c57607f821691505b60208210810361067f5761067e610625565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026106e77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826106aa565b6106f186836106aa565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061073861073361072e84610709565b610713565b610709565b9050919050565b6000819050919050565b6107528361071d565b61076661075e8261073f565b8484546106b7565b825550505050565b600090565b61077b61076e565b610786818484610749565b505050565b5b818110156107aa5761079f600082610773565b60018101905061078c565b5050565b601f8211156107ef576107c081610685565b6107c98461069a565b810160208510156107d8578190505b6107ec6107e48561069a565b83018261078b565b50505b505050565b600082821c905092915050565b6000610812600019846008026107f4565b1980831691505092915050565b600061082b8383610801565b9150826002028217905092915050565b61084482610584565b67ffffffffffffffff81111561085d5761085c61039a565b5b6108678254610654565b6108728282856107ae565b600060209050601f8311600181146108a55760008415610893578287015190505b61089d858261081f565b865550610905565b601f1984166108b386610685565b60005b828110156108db578489015182556001820191506020850194506020810190506108b6565b868310156108f857848901516108f4601f891682610801565b8355505b6001600288020188555050505b505050505050565b61091681610349565b82525050565b6000604082019050610931600083018561090d565b818103602083015261094381846105ca565b90509392505050565b600081905092915050565b600061096282610584565b61096c818561094c565b935061097c8185602086016105a0565b80840191505092915050565b60006109948284610957565b91508190509291505056fea2646970667358221220213c2dfad7083591f159b6411df3cebe3b9b4bf42247cbf2c31eb0f18803a3cc64736f6c63430008120033'; // Your contract bytecode

var myContract = new web3.eth.Contract(contractABI);

web3.eth.getAccounts().then(function(accounts) {
    var deploy = {
        data: contractBytecode,
        arguments: [] // Empty if no constructor arguments
    };

    myContract.deploy(deploy)
    .send({
        from: accounts[0], 
        gas: '4700000'
    })
    .on('receipt', function(receipt) {
        console.log('Contract Address:', receipt.contractAddress);
    })
    .on('error', console.error);
});
